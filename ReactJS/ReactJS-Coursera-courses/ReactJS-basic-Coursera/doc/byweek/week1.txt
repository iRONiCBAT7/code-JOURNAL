//to create react app

npm init react-app appfolderName

or 

npx create-react-app appFolderName




props and children



children props is automatically passed to the component.

when you see a JSX element wrapping some other JSX element, you can easily 
understand that it's all just props.children in the background.



##### styling JSX Element - 

1. Besides inlining a style object literal, you can also save it in a    
   variable, and then use that variable instead of passing an object  
   literal.

2. inline 

3. you can access those CSS classes using the className attribute.
   And include through seprate file of css.

style={{color:"tomato", fontSize:"40px", fontWeight:"bold"}}  
note: see the camle case different from css.

style object literal inside of these curly braces
 
whatever code you add inside these opening and closing curly braces is to be parsed as regular JavaScript.

 since it's just JavaScript, those CSS properties that would be
  hyphenated in plain CSS, such as, for example,
  font-size:40px, become camelCased, and the value is a string,
   making it look like this: fontSize:"40px".
 
 
 What is CSS-in-JS? 
 
 “CSS-in-JS” refers to a pattern where CSS is composed 
 using JavaScript instead of defined in external files.

Note that this functionality is not a part of React, 
but provided by third-party libraries. React does not 
have an opinion about how styles are defined; 
if in doubt, a good starting point is to define your
 styles in a separate *.css file as usual and refer 
 to them using className.













